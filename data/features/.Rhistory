source("https://bioconductor.org/biocLite.R")
biocLite("biomaRt")
library(biomaRt)
geneIds = read.csv(file.choose(), header = F, sep = ";")
View(geneIds)
View(geneIds)
geneIds = as.character(geneIds)
geneIds = read.csv(file.choose(), header = F, sep = ";")
geneIds = read.csv(file.choose(), header = F, sep = ";")
View(geneIds)
View(geneIds)
class(geneIds$V1)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = false)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
class(geneIds$V1)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
mart
annotations = getBM(attributes = c("hgnc_symbol", "uniprot_gn"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
View(geneIds)
View(geneIds)
View(annotations)
View(geneIds)
View(annotations)
class(annotations)
exists(annotations$hgnc_symbol) && is.data.frame(get(annotations$hgnc_symbol))
for (i in geneIds){
exists(i) && is.data.frame(get(annotations$hgnc_symbol))
}
View(annotations)
View(annotations)
View(annotations)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
annotations = getBM(attributes = c("hgnc_symbol", "uniprot_gn"), filters = "hgnc_symbol", values = geneIds, mart = mart)
write.csv(annotations, ":\mappingHGNCtoUNIPROT.csv")
write.csv(annotations, "mappingHGNCtoUNIPROT.csv")
write.table(annotations, "mappingHGNCtoUNIPROT.csv", sep = "\t")
write.table(annotations, "mappingHGNCtoUNIPROT.csv", sep = "\t", row.names = F)
listMarts()
listDatasets(mart)
View(annotations)
annotations = getBM(attributes = c("hgnc_symbol", "entrez_gn"), filters = "hgnc_symbol", values = geneIds, mart = mart)
listAttributes(mart)
annotations = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), filters = "hgnc_symbol", values = geneIds, mart = mart)
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene_trans_name"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(geneIds)
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene"), filters = "hgnc_symbol", values = geneIds, mart = mart, archive = T)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl", archive = T)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl", archive = TRUE)
library(biomaRt)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl", archive = TRUE)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene"), filters = "hgnc_symbol", values = geneIds, mart = mart)
annotations = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
View(geneIds)
View(annotations)
View(annotations)
View(annotations)
annotations = getBM(attributes = c("hgnc_symbol", "entrezgene"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
library(biomaRt)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl", archive=T)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl",host="www.ensembl.org",
path="/biomart/martservice", port=80, archive=T)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl", host="www.ensembl.org", archive=T)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
annotations = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
annotations = getBM(attributes = c("hgnc_symbol", "uniprot_gn"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
write.table(annotations, "mappingHGNCtoUNIPROT.csv", sep = "\t", row.names = F)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
library(biomaRt)
geneIds = read.csv(file.choose(), header = F, sep = ";", stringsAsFactors = F)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
annotations = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), filters = "hgnc_symbol", values = geneIds, mart = mart)
mart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
annotations = getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
annotations = getBM(attributes = c("hgnc_symbol", "uniprot_gn"), filters = "hgnc_symbol", values = geneIds, mart = mart)
View(annotations)
write.table(annotations, "mappingHGNCtoUNIPROT.csv", sep = "\t", row.names = F)
setwd("~/git/influentialnodes/data/cascade/Features")
setwd("~/git/influentialnodes/data/cascade/Features")
read.csv("/")
features = read.csv("./20190201_Node_features_new.txt")
features = read.csv("./20190201_Node_features_new.txt, sep = '\t")
features = read.csv("./20190201_Node_features_new.txt", sep = '\t')
essential_data = read.csv("./Essential Genes/Homo sapiens_consolidated.csv", sep = ",")
View(essential_data)
write.csv(essential_data, file = "./Essential Genes/Homo sapiens_consolidated.tsv", sep= '\t')
write.table(essential_data, file = "./Essential Genes/Homo sapiens_consolidated.tsv", sep= '\t')
write.table(essential_data, file = "./Essential Genes/Homo sapiens_consolidated.tsv", sep= '\t', quote = FALSE)
View(essential_data)
setwd("~/git/influentialnodes/data/cascade/Features")
features = read.csv("./20190201_Node_features_new.txt", sep = '\t')
features
features = features[,2]
features
write.table(features, file = "./geneList.txt", sep= '\n', quote = FALSE)
write.table(features, file = "./geneList.txt", sep= '\n', quote = FALSE, header=FALSE)
write.table(features, file = "./geneList.txt", sep= '\n', quote = FALSE, row.names =
FALSE)
write.table(features, file = "./geneList.txt", sep= '\n', quote = FALSE, row.names = FALSE)
features = read.csv("./20190201_Node_features_new.txt", sep = '\t')
View(features)
features = features[,2]
write.table(features, file = "./geneList.txt", sep= '\n', quote = FALSE, row.names = FALSE)
features = read.csv("./20190201_Node_features_new.txt", sep = '\t')
setwd("~/git/influentialnodes/data/cascade/Features")
acsn = read.table("./Pathway analysis/ACSN_enrichmentanalysis.tsv", sep = '\t')
acsn
View(acsn)
